% Set the parameters below and run the script to make plots from the
% CSV files generated by the EM Fiber Clustering Module in Slicer3.
% Mahnaz Maddah, Sept. 2009.
clear all
close all
clc
%%%%% parameters
params.fileDir = '/fs/corpus1/mahnaz/dtiCode/tempFiles/';                % location where CSV files are stored
params.clusterIds = 1;                                                   % cluster Ids for which plots need to be generated
params.population = 1;

params.subjectsDirectory = '/fs/corpus1/asset24_cluster_pilot/tracts_deformable/ped-icap_l/';
params.subjects = dir([params.subjectsDirectory, '*.vtk']);
age = [67.75, 83.02 31.31 77.88 81.24 79.58 33.90 78.88 25.31 80.74 28.46 85.03 75.90 82.15 70.17 20.38 24.16 26.58 28.10 21.16 78.51 28.75 19.98 23.79];
group = (age>35);
age = num2cell(age');
[params.subjects.age] = deal(age{:});
cgroup = num2cell(group');
[params.subjects.group] = deal(cgroup{:});
params.minNumberOfTrajectories = 10;

%%%%% main function
subjects = processCSVfiles(params); 
%%%%%

if params.population
    
    
    
    ws=[];
    for s=1:length(subjects)
         ws = [ws; subjects(s).w]; 
    end
    
    subjects = removeNoneContributingSubjects(subjects, params.minNumberOfTrajectories);

    subjects = interpolateSingleNaNColumns(subjects);
    
    ws=[];
    for s=1:length(subjects)
         ws = [ws; subjects(s).w]; 
    end
    
    [ii,jj] = find(ws==0);
    [ii, donecare, zz] = unique(ii);
    for n =1:length(ii)
        fprintf('subject %s is causing truncation ( %d samples ). \n \n', subjects(ii(n)).name, length(find(zz==n)));
    end
    subjects = truncateNaNColumns(subjects,unique(jj));

        
    figure;
    features = [{'FA'},{'MD'},{'Parallel Diffusion'}, {'Perpendicular Diffusion'}];

for d=1:4
    data =[];sgroup=[];
    for s=1:length(subjects)
        data = [data; subjects(s).data_means(d,:)];
        sgroup = [sgroup; subjects(s).group];
    end
    N = size(data,2);  
    for j=1:size(data,2)
       p(d,j) = anova1(data(:,j),sgroup,'off');
    end
    m(d,:) = mean(data(find(sgroup==1),:));
    v(d,:) = std(data(find(sgroup==1),:));
    
    m_controls(d,:) = mean(data(find(sgroup==0),:));
    v_controls(d,:) = std(data(find(sgroup==0),:));
    
  
    subplot(2,2,d)
    stem(p(d,:));
    ylabel(features(d));
    xlim([0 N]);
end

figure;
for d=1:4
    subplot(2,2,d)
    hold on;
    plot(smooth(m(d,:),3),'r');
    %plot(m(d,:)+v(d,:),'--r');
    %plot(m(d,:)-v(d,:),'--r');
    plot(smooth(m_controls(d,:),3),'b');
    %plot(m_controls(d,:)+v_controls(d,:),'--b');
    %plot(m_controls(d,:)-v_controls(d,:),'--b');
    ylabel(features(d));
    xlim([0 N]);
end

figure;
for d=1:4
    data =[]; age =[];
    for s=1:length(subjects)
        data = [data; subjects(s).data_means(d,:)];
        age = [age; subjects(s).age];
    end
    N = size(data,2);
    
    % sort data based on age vector
    [sortedAge, sortedAgeIdx] = sort(age);
    data = data(sortedAgeIdx,:);
    
    for j=1:N
        [b, stats] = robustfit(sortedAge, data(:,j));
        %[b,bint,r,rint,stats] = regress(y,X)
        coef(d,j) = b(2);
        pval(d,j) = stats.p(2);
    end
    
    subplot(2,2,d)
    plot(coef(d,:),'.b');
    %stem(pval(d,:));
    ylabel(features(d));
    xlim([0 N]);
end

figure;
for d=1:4
    subplot(2,2,d)
    stem(pval(d,:));
    ylabel(features(d));
    xlim([0 N]);
end


ws2=[];
for s=1:length(subjects)
         ws2 = [ws2; subjects(s).w];
 end
 %plot(sum(ws2))
 

end